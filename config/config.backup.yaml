# ASR Hub 配置檔案範例
# 將此檔案複製為 base.yaml 並根據您的需求修改設定值
# 支援環境變數替換: ${VAR_NAME} 或 ${VAR_NAME:default_value}

# ===== 系統核心設定 =====
system:
  name: "ASR_Hub"
  version: "0.1.0"
  mode: ${APP_ENV:development}  # development, production, testing
  debug: ${DEBUG:true}

# ===== 日誌設定 =====
logging:
  path: "./logs"
  rotation: "100 MB"      # 日誌輪替：可用 "daily", "100 MB", "7 days" 等
  retention: "30 days"    # 日誌保留期限
  level: "INFO"  # TRACE, DEBUG, INFO, WARNING, ERROR, CRITICAL
  format: "detailed"      # detailed, simple, json

# ===== API 設定 =====
api:
  # HTTP SSE (Server-Sent Events) 配置
  http_sse:
    cors_enabled: true
    host: ${API_HOST:0.0.0.0}
    port: ${API_PORT:8000}
    max_connections: 100
    request_timeout: 300  # 秒
    
  # WebSocket 配置
  websocket:
    enabled: true
    host: ${WS_HOST:0.0.0.0}
    port: ${WS_PORT:8765}
    max_message_size: 10485760  # 10 MB
    ping_interval: 30
    
  # gRPC 配置
  grpc:
    enabled: false
    host: ${GRPC_HOST:0.0.0.0}
    port: ${GRPC_PORT:50051}
    max_receive_message_length: 10485760
    
  # Socket.IO 配置
  socketio:
    enabled: true
    host: ${SOCKETIO_HOST:0.0.0.0}
    port: ${SOCKETIO_PORT:8766}
    cors_allowed_origins: "*"
    
  # Redis 配置
  redis:
    enabled: false
    host: ${REDIS_HOST:localhost}
    port: ${REDIS_PORT:6379}
    db: ${REDIS_DB:0}
    password: ${REDIS_PASSWORD:}  # 空字串表示無密碼
    channel_prefix: "asr_hub:"

# ===== Pipeline 設定 =====
pipeline:
  default_sample_rate: 16000
  channels: 1  # 單聲道
  encoding: "int16"  # 音訊編碼格式
  buffer_size: 4096
  max_pipeline_length: 10  # 最大 operator 數量
  
  # Pipeline Operators 配置
  operators:
    # 喚醒詞偵測
    wakeword:
      enabled: true
      type: "openWakeWord"  # openWakeWord, asr_keyword
      # OpenWakeWord 特定配置
      model_path: "models/hi_kmu_0721.onnx"
      threshold: 0.5
      debounce_time: 2.0  # 去抖動時間（秒）
      continuous_detection: true  # 連續偵測模式
      # 效能設定
      inference_threads: 1  # 推論執行緒數
      use_quantized_model: false  # 使用量化模型
      
    # VAD (Voice Activity Detection) 語音活動偵測
    vad:
      enabled: true
      type: "silero"  # webrtc, silero
      # Silero VAD 設定
      silero:
        enabled: true
        threshold: 0.5
        min_silence_duration: 0.5
        min_speech_duration: 0.25
        model_path: "models/silero_vad.onnx"
        model_name: "silero_vad_v4"  # 模型版本
        use_gpu: false
        adaptive_threshold: false  # 自適應閾值（關閉以避免過度敏感）
        threshold_window_size: 50  # 自適應閾值窗口大小
        smoothing_window: 10  # 平滑窗口大小（增大以減少抖動）
      # WebRTC VAD 設定（備選）
      webrtc:
        enabled: false
        aggressiveness: 2  # 0-3
        frame_duration: 30  # ms
        padding_duration: 300  # ms
      
    # 降噪
    denoise:
      enabled: false
      type: "rnnoise"  # rnnoise, noisereduce
      strength: 0.7
      
    # 取樣率調整
    sample_rate_adjustment:
      enabled: true
      target_rate: 16000
      quality: "high"  # low, medium, high
      
    # 人聲分離
    voice_separation:
      enabled: false
      model: "spleeter"
      stems: 2  # 2 或 4
      
    # 格式轉換
    format_conversion:
      enabled: true
      target_format: "pcm"  # pcm, wav, mp3
      channels: 1  # 1 (mono) 或 2 (stereo)
      bits_per_sample: 16
      
    # 錄音功能
    recording:
      enabled: true
      format: "wav"
      sample_rate: 48000 # 取樣率
      channels: 2  # 1 (mono) 或 2 (stereo)
      max_duration: 60  # seconds
      max_file_size: 100  # MB
      storage:
        type: "file"  # memory, file, s3
        path: "./recordings"
      # VAD 控制設定
      vad_control:
        enabled: true
        silence_countdown: 1.8  # 靜音倒數秒數
        min_recording_duration: 0.5  # 最短錄音時長
        pre_speech_buffer: 0.3  # 語音前緩衝秒數
        post_speech_buffer: 0.2  # 語音後緩衝秒數
      # 分段錄音
      segmentation:
        enabled: false
        segment_duration: 30.0  # 每段時長（秒）
        overlap_duration: 0.5  # 段落重疊時長
      # 元數據
      metadata:
        enabled: true
        include_vad_info: true
        include_timestamps: true
        save_path: "./recordings/metadata"

# ===== ASR Provider 設定 =====
providers:
  default: "whisper"  # 預設使用的 provider
  
  # Local Whisper
  whisper:
    enabled: true  # 啟用以進行端到端測試
    model_size: ${WHISPER_MODEL:base}  # tiny, base, small, medium, large
    language: "zh"  # 語言代碼，null 表示自動偵測
    device: ${WHISPER_DEVICE:cpu}  # cpu, cuda, mps
    compute_type: "float32"  # float32, float16, int8
    beam_size: 5
    best_of: 5
    temperature: 0.0
    use_faster_whisper: true  # 使用 faster-whisper 引擎
    initial_prompt: null  # 初始提示詞，可選
    vad_filter: false  # 是否使用 VAD 過濾
    # 模型下載路徑
    model_path: "./models/whisper"
    
    # 池化配置 (可選，預設為關閉)
    pool:
      enabled: false   # 暫時關閉池化直到 Whisper 安裝完成
      min_size: 1     # 最小池大小
      max_size: 3     # 最大池大小（根據記憶體和 GPU 資源調整）
      idle_timeout: 300.0  # 空閒實例超時時間（秒）
      acquire_timeout: 30.0  # 獲取實例超時時間（秒）
      health_check_interval: 60.0  # 健康檢查間隔（秒）
      # 動態縮放配置
      auto_scale:
        enabled: true
        scale_up_threshold: 0.8  # 使用率超過 80% 時擴展
        scale_down_threshold: 0.3  # 使用率低於 30% 時縮減
        scale_interval: 60.0  # 縮放檢查間隔（秒）
    
  # FunASR
  funasr:
    enabled: false
    model: "paraformer"  # paraformer, conformer
    language: "zh"
    device: "cpu"
    model_path: "./models/funasr"
    # 池化配置 (可選)
    pool:
      enabled: false
      min_size: 1
      max_size: 3
    
  # Vosk
  vosk:
    enabled: false
    model_path: "./models/vosk/vosk-model-cn-0.22"
    sample_rate: 16000
    # 池化配置 (可選)
    pool:
      enabled: false
      min_size: 2
      max_size: 4
    
  # Google Cloud Speech-to-Text
  google_stt:
    enabled: false
    credentials_path: ${GOOGLE_APPLICATION_CREDENTIALS:}
    language_code: "zh-TW"
    encoding: "LINEAR16"
    sample_rate: 16000
    enable_automatic_punctuation: true
    
  # OpenAI API
  openai:
    enabled: false
    api_key: ${OPENAI_API_KEY:}
    model: "whisper-1"
    language: "zh"
    temperature: 0.0
    base_url: ${OPENAI_BASE_URL:https://api.openai.com/v1}

# ===== 喚醒詞設定 =====
wake_word_detection:
  enabled: true
  # 系統層監聽器設定
  system_listener:
    enabled: true
    always_on: true  # 系統層持續監聽
    buffer_size: 4096
    min_resource_mode: true  # 最小資源消耗模式
  
  wake_timeout: 3.0  # 喚醒後的超時時間（秒）
  cooldown: 2.0  # 喚醒後的冷卻時間（秒）
  
  # 喚醒詞模型設定
  models:
    # OpenWakeWord 模型
    - type: openWakeWord
      enabled: true
      model_path: "models/hi_kmu_0721.onnx"  # ONNX 模型檔案路徑
      threshold: 0.5  # 偵測閾值 (0.0 - 1.0)
      language: "zh-TW"  # 語言代碼
      # HuggingFace 模型下載設定（當 model_path 不存在時使用）
      hf_repo_id: "JTBTechnology/kmu_wakeword"  # HuggingFace repo ID
      hf_filename: "hi_kmu_0721.onnx"  # 模型檔案名稱
      hf_token: ${HF_TOKEN:}  # HuggingFace token（可選，用於私有模型）
      # 模型特定設定
      inference_framework: "onnxruntime"  # onnxruntime, tflite
      use_gpu: false  # 是否使用 GPU 加速
      batch_size: 1  # 批次推論大小
      # 音訊處理設定
      sample_rate: 16000  # 取樣率
      window_size: 1280  # 滑動視窗大小（樣本數）
      score_queue_size: 60  # 評分佇列大小
      # 效能優化
      cache_embeddings: true  # 快取嵌入
      preload_model: true  # 預先載入模型
      
    # 可以加入更多模型（未來擴充）
    # - type: asr_keyword
    #   enabled: false
    #   keywords:
    #     - "你好小明"
    #     - "Hey Assistant"
    #   similarity_threshold: 0.8
    
  # 喚醒事件設定
  wake_events:
    publish_to_api: true  # 是否推送喚醒事件到 API
    include_audio_context: false  # 是否包含喚醒時的音訊上下文
    context_duration: 2.0  # 音訊上下文時間（秒）
    
  # 多源喚醒支援（未來擴充）
  multi_source:
    ui_wake: false  # UI 喚醒
    visual_wake: false  # 視覺喚醒
    gesture_wake: false  # 手勢喚醒

# ===== 串流設定 =====
stream:
  # 音訊參數
  sample_rate: 16000  # 取樣率
  channels: 1  # 聲道數

  # 靜音偵測設定
  silence_timeout: 3.0  # 秒，靜音超過此時間後自動停止
  initial_silence_timeout: 10.0  # 初始靜音超時
  max_segment_duration: 30.0  # 最大片段持續時間（秒）
  enable_vad: true  # 是否啟用語音活動偵測
  
  # 手動終止
  manual_termination: true
  termination_phrase: "結束辨識"  # 說出此詞彙時停止辨識
  
  # Busy 模式設定
  busy_mode:
    enabled: true
    continue_listening: true  # busy 狀態時是否繼續聆聽
    buffer_audio: true  # 是否緩存 busy 期間的音訊
    max_buffer_duration: 30.0  # 最大緩存時長（秒）
    
  # 串流緩衝設定
  buffer:
    size: 8192
    max_chunks: 1000
    overflow_strategy: "drop_oldest"  # drop_oldest, drop_newest, block

# ===== 效能設定 =====
performance:
  # 執行緒池設定
  thread_pool:
    min_workers: 2
    max_workers: 10
    
  # 記憶體限制
  memory:
    max_usage_mb: 2048
    gc_threshold: 0.8  # 觸發 GC 的記憶體使用率
    
  # 批次處理
  batch:
    enabled: false
    size: 10
    timeout: 1.0

# ===== 安全設定 =====
security:
  # API 認證
  auth:
    enabled: false
    type: "api_key"  # api_key, jwt, oauth2
    api_keys: []  # 在 base.yaml 中設定實際的 API keys
    
  # 速率限制
  rate_limit:
    enabled: true
    requests_per_minute: 60
    requests_per_hour: 1000
    
  # SSL/TLS
  ssl:
    enabled: false
    cert_file: ${SSL_CERT_FILE:}
    key_file: ${SSL_KEY_FILE:}

# ===== 監控設定 =====
monitoring:
  # Metrics
  metrics:
    enabled: false
    export_interval: 60  # 秒
    
  # Health Check
  health_check:
    enabled: true
    endpoint: "/health"
    check_interval: 30  # 秒
    
  # 追蹤
  tracing:
    enabled: false
    service_name: "asr-hub"
    
# ===== FSM (Finite State Machine) 設定 =====
fsm:
  # 通用設定
  default_strategy: "NON_STREAMING"  # BATCH, NON_STREAMING, STREAMING
  keep_awake_after_reply: true  # TTS 播放後是否保持喚醒狀態
  
  # 各策略的超時設定（毫秒）
  timeout_configs:
    # BATCH 模式超時設定（批次處理通常不需要超時）
    batch:
      processing: 60000  # 處理檔案超時（60秒）
      
    # NON_STREAMING 模式超時設定（如 Whisper）
    non_streaming:
      activated: 5000     # 喚醒視窗（5秒）
      recording: 10000    # 最大錄音時間（10秒）
      transcribing: 5000  # 轉譯超時（5秒）
      llm_claim: 5000     # LLM 回應超時（5秒）
      tts_claim: 5000     # TTS 播放超時（5秒）
      session_idle: 600000  # 會話閒置超時（10分鐘）
      
    # STREAMING 模式超時設定（如 Google STT、Vosk）
    streaming:
      activated: 5000     # 喚醒視窗（5秒）
      streaming: 30000    # 最大串流時間（30秒）
      llm_claim: 5000     # LLM 回應超時（5秒）
      tts_claim: 5000     # TTS 播放超時（5秒）
      session_idle: 600000  # 會話閒置超時（10分鐘）
  
  # 狀態回復設定
  recovery:
    max_retry_attempts: 3
    retry_delay_ms: 1000
    auto_recover_from_error: true
    
  # 事件優先級設定（可選，使用預設值）
  event_priorities:
    reset: 100         # 最高優先級
    error: 90
    recover: 90
    interrupt_reply: 60
    llm_reply_started: 50
    tts_playback_started: 50
    tts_playback_finished: 40
    timeout: 30
    default: 0         # 預設優先級

# ===== 資料庫設定（可選，用於儲存 session 或日誌）=====
database:
  enabled: false
  type: "sqlite"  # sqlite, postgresql, mysql
  
  # SQLite 設定
  sqlite:
    path: "./data/asr_hub.db"
    
  # PostgreSQL/MySQL 設定
  host: ${DB_HOST:localhost}
  port: ${DB_PORT:5432}
  name: ${DB_NAME:asr_hub}
  user: ${DB_USER:postgres}
  password: ${DB_PASSWORD:}  # 敏感資料，會自動遮罩
  
  # 連接池設定
  pool:
    size: 10
    max_overflow: 20
    timeout: 30