# ================================
# ASR Hub 配置檔案
# ================================
# 版本: 0.3.0
# 更新日期: 2025-08-23
#
# 使用說明:
# 1. 將此檔案複製為 config.yaml
# 2. 根據您的需求修改設定值
# 3. 使用 ${ENV_VAR:default} 語法設定環境變數

# ================================
# 系統設定
# ================================
system:
  name: "ASR_Hub"
  version: "0.3.0"
  mode: ${APP_ENV:development} # development, production, testing
  debug: ${DEBUG:true}

# ================================
# 日誌設定
# ================================
logging:
  path: "./logs"
  level: ${LOG_LEVEL:INFO} # TRACE, DEBUG, INFO, WARNING, ERROR, CRITICAL
  rotation: "100 MB" # 日誌輪替: "daily", "100 MB", "7 days"
  retention: "30 days" # 日誌保留期限
  format: "detailed" # detailed, simple, json

# ================================
# API 協議設定
# ================================
api:
  # HTTP SSE (Server-Sent Events)
  http_sse:
    enabled: false
    host: ${API_HOST:0.0.0.0}
    port: ${API_PORT:8000}
    cors_enabled: true
    max_connections: 100
    request_timeout: 300 # 秒

  # WebSocket
  websocket:
    enabled: false
    host: ${WS_HOST:0.0.0.0}
    port: ${WS_PORT:8001}
    max_message_size: 10485760 # 10 MB
    ping_interval: 30 # 秒

  # Socket.IO
  socketio:
    enabled: false
    host: ${SOCKETIO_HOST:0.0.0.0}
    port: ${SOCKETIO_PORT:8002}
    cors_allowed_origins: "*"

  # Redis 配置
  redis:
    enabled: true
    host: ${REDIS_HOST:127.0.0.1}
    port: ${REDIS_PORT:6379}
    db: ${REDIS_DB:0}
    password: ${REDIS_PASSWORD:} # 空字串表示無密碼
    channel_prefix: "asr_hub:"

# ================================
# 音訊設定
# ================================
audio:
  default_sample_rate: 16000
  default_channels: 1 # 1=單聲道, 2=立體聲
  default_encoding: "int16" # int16, float32
  buffer_size: 4096
  
  # 音訊處理參數
  silence_threshold: 0.01  # 靜音闾值
  silence_duration: 0.5  # 靜音持續時間（秒）
  min_silence_ms: 100  # 最小靜音毫秒數

# ================================
# 服務設定 (Stateless Services)
# ================================
services:
  # 音訊佇列管理
  audio_queue:
    max_queue_size: 1000
    ttl_seconds: 3600
    queue_cleanup_interval: 600
    blocking_timeout: 0.1
    blocking_sleep_interval: 0.01
    # 預錄和尾部填充設定（用於 Session Effects）
    pre_roll_duration: 0.5      # 預錄緩衝時間（秒）- 喚醒詞前的音訊
    tail_padding_duration: 0.3  # 尾部填充時間（秒）- 語音結束後的音訊

  # 音訊轉換服務
  audio_converter:
    ffmpeg:
      enabled: true
      path: ${FFMPEG_PATH:ffmpeg}
      timeout: 30
    scipy:
      enabled: true
      use_gpu: ${USE_GPU:true}
      batch_size: 50
      quality: "high"  # low, medium, high
    defaults:
      target_sample_rate: 16000
      target_channels: 1
      target_format: "pcm_s16le"

  # 音訊緩衝管理
  buffer_manager:
    default_sample_rate: 16000
    default_channels: 1
    default_sample_width: 2  # int16
    max_buffer_size: 1048576  # 1MB
    vad_buffer:
      window_ms: 400
      mode: "fixed"
    wakeword_buffer:
      frame_samples: 1280
      mode: "fixed"
    funasr_buffer:
      frames_per_buffer: 9600
      mode: "fixed"
    whisper_buffer:
      window_seconds: 8
      step_seconds: 2
      overlap: 0.8
      mode: "sliding"

  # 喚醒詞服務
  wakeword:
    enabled: true
    type: "openwakeword"  # openwakeword, porcupine, snowboy
    openwakeword:
      model_path: ${WAKEWORD_MODEL:./models/hi_kmu_0721.onnx}
      threshold: 0.7
      chunk_size: 1280
      sample_rate: 16000
      debounce_time: 2.0
      max_buffer_size: 100
      continuous_detection: true
      use_gpu: false

  # 錄音服務
  recording:
    enabled: true # 是否啟用錄音服務
    
    # 基本設定
    output_dir: ${RECORDING_DIR:./recordings}
    file_format: "wav" # wav, mp3, flac

    # 檔案命名
    filename_pattern: "{session_id}_{timestamp}" # 支援: {session_id}, {timestamp}, {date}, {time}
    timestamp_format: "%Y%m%d_%H%M%S"

    # 音訊參數
    sample_rate: 16000
    channels: 1
    sample_width: 2 # 2=16-bit, 4=32-bit

    # 處理設定
    max_workers: 10 # 最大並行錄音數（原 recording_max_workers）
    batch_size: 10 # 批次處理 chunk 數量（原 recording_batch_size）
    wait_timeout: 0.1 # 等待資料超時（秒）

    # 檔案管理
    auto_cleanup: true # 自動清理舊檔案（原 recording_auto_cleanup）
    cleanup_days: 7 # 保留天數
    cleanup_schedule: "03:00" # 清理時間 (HH:MM)
    max_file_size_mb: 500 # 單檔最大大小 (MB)

  # VAD (Voice Activity Detection) 服務
  vad:
    enabled: true
    type: "silero"  # silero, webrtc
    silence_threshold: 1.2  # 靜音閾值（秒）- 減少到 1.2 秒以提升響應速度

    # Silero VAD
    silero:
      model_path: ${VAD_MODEL_PATH:}
      threshold: 0.4  # 降低闾值以更快檢測到語音
      min_silence_duration: 0.4  # 減少最小靜音時間
      min_speech_duration: 0.25  # 減少最小語音時間
      sample_rate: 16000
      chunk_size: 256  # 減小 chunk size 以提升響應速度
      window_size: 256  # 減小 window size
      use_gpu: false
      speech_pad_ms: 30
      return_seconds: false
      max_speech_duration: 60.0

    webrtc:
      aggressiveness: 2  # 0-3
      frame_duration: 30  # 10, 20, 30 ms
      sample_rate: 16000

  # 計時器服務
  timer:
    enabled: true
    max_timers_per_session: 50
    max_total_timers: 1000
    cleanup_interval: 3600
    auto_cleanup: true
    default_timeout: 60.0
    min_duration: 0.1
    max_duration: 86400.0  # 24小時
    precision: 0.01

  # 降噪服務
  denoiser:
    enabled: false
    type: "deepfilternet"  # deepfilternet, rnnoise, spectral_subtraction
    strength: 0.7  # 0.0-1.0，降噪強度
    
    # DeepFilterNet 配置
    deepfilternet:
      model_base_dir: "DeepFilterNet3"  # DeepFilterNet2, DeepFilterNet3
      post_filter: true  # 啟用後處理濾波器
      auto_init: true   # 啟動時自動初始化模型
      device: "cuda"    # auto, cpu, cuda - 自動選擇最佳設備
      chunk_size: 16000 # 處理音訊塊大小 (樣本數，1秒@16kHz)

  # 音訊增強服務 (MVP 版本)
  audio_enhancer:
    enabled: false
    # RMS 門檻值
    min_rms_threshold: 0.005  # 更嚴格的觸發條件
    target_rms: 0.05          # 更低的目標音量
    # 增益限制
    max_gain: 2.0             # 更保守的增益
    # 高通濾波器
    highpass_alpha: 0.95  # 濾波係數 (0.9-0.99)
    # 限幅器
    limiter_threshold: 0.95  # 硬限幅閾值
    
    vad_enhancer:
      dc_remove: true
      highpass: true
      normalize: false
      limit: false
    
    asr_enhancer:
      dc_remove: true
      highpass: true
      normalize: true
      limit: true

  # 麥克風擷取服務
  microphone:
    enabled: true
    backend: "auto"  # auto, sounddevice, pyaudio
    sample_rate: 16000
    channels: 1  # 1=單聲道, 2=立體聲
    chunk_size: 1024
    dtype: "float32"  # float32, int16
    queue_size: 100
    device_index: null  # null=預設裝置

# ================================
# ASR 提供者設定
# ================================
providers:
  default: "whisper"

  # Whisper (OpenAI)
  whisper:
    enabled: true
    model_size: ${WHISPER_MODEL:turbo}  # tiny, base, small, medium, large, large-v3, turbo
    language: "zh"
    whisper_device: ${WHISPER_DEVICE:cuda}  # cpu, cuda, mps
    compute_type: "int8_float16"  # float32, float16, int8, int8_float16
    use_faster_whisper: true
    whisper_model_path: "./models/whisper"

  # FunASR
  funasr:
    enabled: false
    model: "paraformer"
    language: "zh"
    funasr_device: "cpu"
    funasr_model_path: "./models/funasr"

  # Vosk
  vosk:
    enabled: false
    vosk_model_path: "./models/vosk/vosk-model-cn-0.22"
    vosk_sample_rate: 16000

  # Google STT
  google_stt:
    enabled: false
    credentials_path: ${GOOGLE_APPLICATION_CREDENTIALS:}
    language_code: "zh-TW"

  # OpenAI API
  openai:
    enabled: false
    api_key: ${OPENAI_API_KEY:}
    model: "whisper-1"
    language: "zh"

  # Provider Pool 設定
  pool:
    # 基本配置
    min_size: 2  # 最小池大小
    max_size: 5  # 最大池大小
    per_session_quota: 2  # 每個 session 最大租用數量
    
    # 健康檢查
    enabled: true  # 啟用健康檢查
    max_consecutive_failures: 3  # 連續失敗次數閾值（超過則標記為不健康）
    
    # 超時設定
    initialization_timeout: 30.0  # 初始化超時（秒）
    lease_timeout: 10.0  # 租用超時（秒）
    
    # 清理設定  
    cleanup_interval: 300  # 清理間隔（秒）
    auto_cleanup_unhealthy: true  # 自動清理不健康的 provider
    
    # ThreadPoolExecutor 設定（用於 Session Effects）
    thread_pool_max_workers: 5  # 最大工作線程數


# ================================
# FSM 狀態機設定
# ================================
fsm:
  default_strategy: "NON_STREAMING" # BATCH, NON_STREAMING, STREAMING

  # 超時配置（毫秒）
  timeout_configs:
    batch:
      processing: 60000

    non_streaming:
      non_streaming_activated: 5000
      non_streaming_recording: 10000
      transcribing: 5000
      non_streaming_session_idle: 600000

    streaming:
      streaming_activated: 5000
      streaming_timeout: 30000
      streaming_session_idle: 600000

  # 狀態回復
  recovery:
    max_retry_attempts: 3
    retry_delay_ms: 1000
    auto_recover_from_error: true

# ================================
# Provider Pool 設定（全域）
# ================================
provider_pool:
  # Provider 類型
  provider_type: "whisper"  # whisper, funasr, vosk, google_stt, openai
  
  # 池大小設定
  min_size: 1  # 池的最小大小
  max_size: 5  # 池的最大大小
  
  # 租借設定
  lease_timeout: 10.0  # 租借超時（秒）
  max_wait_time: 30.0  # 最大等待時間（秒）
  
  # 配額管理
  per_session_quota: 2  # 每個 session 最大同時租借數
  
  # 健康檢查
  max_consecutive_failures: 3  # 最大連續失敗次數（之後標記為不健康）
  health_check_interval: 60.0  # 健康檢查間隔（秒）
  
  # 老化防止機制
  aging_prevention: true  # 啟用老化防止
  aging_factor: 0.001  # 老化因子（每毫秒增加的優先級）
  default_priority: 5  # 預設優先級（1-10）
  
  # 自動擴展
  auto_scaling: true  # 自動擴展池大小
  scale_up_threshold: 0.8  # 使用率超過此值時擴展
  scale_down_threshold: 0.3  # 使用率低於此值時縮減
  scale_cooldown: 30.0  # 擴展冷卻時間（秒）

# ================================
# 效能設定
# ================================
performance:
  # 執行緒池
  thread_pool:
    min_workers: 2
    max_workers: 10

  # 記憶體管理
  memory:
    max_usage_mb: 2048
    gc_threshold: 0.8

  # 批次處理
  batch:
    enabled: true
    batch_size: 10
    batch_timeout: 1.0
  
  # 處理限制
  max_iterations: 1000  # 最大迭代次數（防止無限循環）
